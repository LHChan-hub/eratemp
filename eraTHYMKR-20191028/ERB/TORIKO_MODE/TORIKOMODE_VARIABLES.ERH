;=============================================================================
;던젼 시스템을 만들기 위한 헤더파일
;=============================================================================

;각종 계산을 위해 쓸. 임시 1차 전역변수. 펑션에서 돌아오는 값이 1개 뿐이기 때문에, 어쩔 수 없이 이렇게 사용한다. 저장되는 값이 아니다.
;만약 특정 펑션에서 여러개의 값이 돌아와야 할 경우, 하이퍼에 저장한후, 밖에서 꺼내쓴다는 원리.
#DIM HYPER, 100

;중복하지 않는 난수를 뽑아내기 위한 1차 전역변수. 저장되지 않는수치이다.
;@SUFFLE, ARG 로 ARG 장수만큼의 중복되지 않는 숫자를 저장한다.
#DIM SHUFFLE, 1000

;맵은 데이터, 3차배열이다. (맵번호 / 가로/ 세로) 또한 저장되는 값이다. 가로 세로 최대 100칸.(그 이상이면 화면에 보여주기 안 좋고)
;맵번호, X좌표, Y좌표 = 지형정보 (0 벽 1공간)
#DIM SAVEDATA FILED_MAP, 100, 100, 100

;맵을 그릴때 중심이 될 포커스 변수. 이동시에는 유저를 따라다니고, 탐색시에는 자유이동한다.
#DIM SAVEDATA FOCUS,10
;FOCUS:0 = 맵번호
;FOCUS:1 = X좌표
;FOCUS:2 = Y좌표
;FOCUS:3 = 포커스모드인지 아닌지 판별. 0은 아니다 1은 맞다

;맵의 구조정보를 저장한다.
;맵번호, 정보종류 = 정보내용
#DIM SAVEDATA DATA_MAP, 100, 100
;DATA_MAP:맵번호:1 = 맵의 가로크기
;DATA_MAP:맵번호:2 = 맵의 세로크기
;DATA_MAP:맵번호:3 = 남은 몬스터의 머릿수
;DATA_MAP:맵번호:4 = 턴수. 던전에 들어갈 때 마다 초기화 된다.

#DIMS SAVEDATA NAME_MAP, 100
;NAME_MAP:0 = 맵의 이름 (문자열)

;방의 정보. 앞번호. 방번호. 뒷번호, 방의 형태정의. (원래 지역변수로 빼야 하나, 지역변수 선언할 줄 몰라서 전역으로 넣었다)
;방번호, 정보종류 = 정보내용
;방은 맵마다 달라지므로, 저장하는 수치여서도 안될 것이다. (즉 이 수치는 쓰고 버려야 할 것이다)
#DIM ROOM,100,100
;방의 시작위치X
;ROOM:1:11
;방의 시작위치Y
;ROOM:1:12
;방의 끝위치X
;ROOM:1:21 
;방의 끝위치Y
;ROOM:1:22
;방의 크기X
;ROOM:1:1
;방의 크기Y
;ROOM:1:2

;맵 FOW 데이터. 유저가 확인한 맵은 밝게 보이기 때문에, 이걸 기록할 필요가 있다.
;맵번호, X좌표, Y좌표. = 탐색여부 : (0 미탐색 1 탐색완료)
#DIM SAVEDATA FOW_MAP, 100, 100, 100

;공간  데이터. 아이템이나 오브젝트 배치에 사용되므로, 이걸 기록할 필요가 있다.
;맵번호, X좌표, Y좌표. = 방복도 여부 : (0 아무것도 아님. 1 방 2복도)
#DIM SAVEDATA ROOM_MAP, 100, 100, 100


;맵 오브젝트 데이터. 맵에 배치된 오브젝트의 정보. 아이템, 문, 함정 등이 들어간다.
;맵번호, X좌표, Y좌표. = 오브젝트.
;단순한 게임이므로, 1개의 땅에는 1개의 오브젝트만 떨어진다. (함정위에 아이템이 있다거나 할 수는 없다는 소리)
#DIM SAVEDATA OBJECT_MAP, 100, 100, 100
;1 = 닫힌문
;2 = 열린문
;3 = 내려가는계단
;4 = 올라가는계단

;맵 아이템 데이터. 아이템의 번호가 들어간다.
#DIM SAVEDATA ITEM_MAP, 100, 100, 100

;맵 몬스터 데이터. 맵에 배치된 몬스터 정보.
;맵번호, X좌표, Y좌표. = 몬스터번호
#DIM SAVEDATA MONSTER_MAP, 100, 100, 100
;-1 = 없다
;0  = 플레이어
;1 ~ = 몬스터

;플레이어 데이터.
;1000개 쯤이면 되겠지.
#DIM SAVEDATA PLAYER_DATA, 1000
;PLAYER_DATA:0 = 현재 맵번호
;PLAYER_DATA:1 = X좌표
;PLAYER_DATA:2 = Y좌표
;PLAYER_DATA:3 = 시야넓이
;PLAYER_DATA:4 = 달리기 ON/OFF (0 OFF, 1 ON)

;인벤토리 데이터. 999칸정도면 충분하겠지. 아이템 번호를 저장한다.
#DIM SAVEDATA INVENTORY_ITEM, 1000

;인벤토리 플래그 정보. 10개 정도.
#DIM SAVEDATA INVENTORY_FLAG, 10
; :0 = 인벤토리 출력 상태 [0전부 1무기만 2방구만 3악세만 4소모품만 5노예만]

;아이템명 (STRING) 최대6글자.
#DIMS SAVEDATA ITEM_NAME_RPG, 1000

;아이템 설명(문자열) 최대? 글자.
#DIMS SAVEDATA ITEM_DISCRIPT_RPG, 1000

;아이템정보. 2차배열변수. 
;ITEM_RPG:번호:속성
#DIM SAVEDATA ITEM_DATA_RPG, 1000, 100
;0 - 타입 (1:소모품, 2:무기, 3:방어구, 4:악세사리, 5:포로, 6:돈)
;1 - 가격

;몬스터 데이터. 2차변수.
;1000개 쯤이면 되겠지.
#DIM SAVEDATA MONSTER_DATA, 1000, 1000
;MONSTER_DATA:몬스터번호:0 = 현재 맵번호
;MONSTER_DATA:몬스터번호:1 = X좌표
;MONSTER_DATA:몬스터번호:2 = Y좌표
;MONSTER_DATA:몬스터번호:3 = 시야넓이
;MONSTER_DATA:몬스터번호:4 = 적대여부
;MONSTER_DATA:몬스터번호:11 =목표 X좌표
;MONSTER_DATA:몬스터번호:12 =목표 Y좌표

;몬스터 시야정보 데이터. 3차변수. 몬스터번호, X, Y
;시야정보를 따로 두는 이유는, 시야체크를 각 턴에서 1회만 하기 위해서이다. (자꾸 반복하면 게임이 느려지기 때문)
;메모리를 팔아 속도를 얻는다.
#DIM FOW_MONSTER, 100, 100, 100


;슈팅 테스트를 위한 40*40 맵.
#DIM TEST_SHOOTING_MAP, 40, 40

;슈팅 테스트를 위한 총알 정보. 앞자리는 총알번호. 뒷자리는 정보.
#DIM TEST_BULLET,100, 10
;1 -X좌표
;2 -Y좌표
;3 -X속도
;4 -Y속도

;슈팅테스트를 위한 유저 정보.
#DIM PLAYER_SHOOTING_TEST_DATA, 10
;1 -X좌표
;2 -Y좌표
